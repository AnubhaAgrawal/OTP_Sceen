{"ast":null,"code":"var _jsxFileName = \"/home/sona/tictacReact/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport auth from '@react-native-firebase/auth';\n\nfunction App() {\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState(); // Handle user state changes\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    return /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Login\"));\n  }\n\n  return /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Welcome \", user.email));\n}","map":{"version":3,"sources":["/home/sona/tictacReact/src/App.js"],"names":["React","useState","useEffect","View","Text","auth","App","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,cAA3B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC,CAHa,CAKb;;AACA,WAASU,kBAAT,CAA4BF,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAGP,IAAI,GAAGM,kBAAP,CAA0BA,kBAA1B,CAAnB;AACA,WAAOC,UAAP,CAFc,CAEK;AACpB,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIL,YAAJ,EAAkB,OAAO,IAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACT,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeA,IAAI,CAACI,KAApB,CADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport auth from '@react-native-firebase/auth';\n\nfunction App() {\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (!user) {\n    return (\n      <View>\n        <Text>Login</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View>\n      <Text>Welcome {user.email}</Text>\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}