{"ast":null,"code":"var _jsxFileName = \"/home/sona/tictacReact/src/Components/SignInScreen.js\";\n// Import FirebaseAuth and firebase.\nimport React, { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase'; // Configure Firebase.\n\nconst config = {\n  apiKey: 'AIzaSyA8mLNugplWZFXG1mTSe9kv4YXTpsaPk4I',\n  authDomain: 'fir-auth-f5663.firebaseapp.com' // ...\n\n};\nfirebase.initializeApp(config);\nexport default class SignInScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    this.uiConfig = {\n      // Popup signin flow rather than redirect flow.\n      signInFlow: 'popup',\n      // We will display Google and Facebook as auth providers.\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n    };\n  }\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => this.setState({\n      isSignedIn: !!user\n    }));\n  } // Make sure we un-register Firebase observers when the component unmounts.\n\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"Please sign-in:\"), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n        uiConfig: this.uiConfig,\n        firebaseAuth: firebase.auth(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/sona/tictacReact/src/Components/SignInScreen.js"],"names":["React","Component","StyledFirebaseAuth","firebase","config","apiKey","authDomain","initializeApp","SignInScreen","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","setState","componentWillUnmount","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC,CAGb;;AAHa,CAAf;AAKAH,QAAQ,CAACI,aAAT,CAAuBH,MAAvB;AAEA,eAAe,MAAMI,YAAN,SAA2BR,KAAK,CAACC,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAGxDQ,KAHwD,GAGhD;AACNC,MAAAA,UAAU,EAAE,KADN,CACY;;AADZ,KAHgD;AAAA,SAUxDC,QAVwD,GAU7C;AACT;AACAC,MAAAA,UAAU,EAAE,OAFH;AAGT;AACAC,MAAAA,aAAa,EAAE,CACXV,QAAQ,CAACW,IAAT,CAAcC,kBAAd,CAAiCC,WADtB,EAEXb,QAAQ,CAACW,IAAT,CAAcG,oBAAd,CAAmCD,WAFxB,EAGXb,QAAQ,CAACW,IAAT,CAAcI,mBAAd,CAAkCF,WAHvB,EAIXb,QAAQ,CAACW,IAAT,CAAcK,kBAAd,CAAiCH,WAJtB,EAKXb,QAAQ,CAACW,IAAT,CAAcM,iBAAd,CAAgCJ,WALrB,CAJN;AAWTK,MAAAA,SAAS,EAAE;AACT;AACAC,QAAAA,2BAA2B,EAAE,MAAM;AAF1B;AAXF,KAV6C;AAAA;;AA2BxD;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,sBAAL,GAA8BrB,QAAQ,CAACW,IAAT,GAAgBW,kBAAhB,CACzBC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACjB,MAAAA,UAAU,EAAE,CAAC,CAACgB;AAAf,KAAd,CADgB,CAA9B;AAGD,GAhCuD,CAkCxD;;;AACAE,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,sBAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKpB,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKC,QAAnC;AAA6C,QAAA,YAAY,EAAER,QAAQ,CAACW,IAAT,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAtDuD","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React , { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\n// Configure Firebase.\nconst config = {\n  apiKey: 'AIzaSyA8mLNugplWZFXG1mTSe9kv4YXTpsaPk4I',\n  authDomain: 'fir-auth-f5663.firebaseapp.com',\n  // ...\n};\nfirebase.initializeApp(config);\n \nexport default class SignInScreen extends React.Component {\n \n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n\n  \n \n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n        firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n        firebase.auth.GithubAuthProvider.PROVIDER_ID,\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n \n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n \n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        </div>\n      );\n    }\n    return (\n      <div>\n       \n      \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}